/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-3141
an improved algorithm for decentralized extrema finding in circular configurations of processes this note presents an improvement to lelanns algorithm for finding the largest or smallest of a set of uniquely numbered processes arranged in a circle in which no central controller exists and the number of processes is not known a priori this decentralized algorithm uses a technique of selective message extinction in order to achieve an average number of message passes of order n log n rather than on2 cacm may 1979 chang e roberts r decentralized algorithms distributed systems operating systems 432 435 525 532 ca790502 dh june 5 1979 235 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2378
an operating system based on the concept of a supervisory computer an operating system which is organized as a small supervisor and a set of independent processes are described the supervisor handles io with external devices the file and directory system schedules active processes and manages memory handle errors and provides a small set of primitive functions which it will execute for a process a process is able to specify a request for a complicated action on the part of the supervisor usually a wait on the occurrence of a compound event in the system by combining these primitives into a supervisory computer program the part of the supervisor which executes these programs may be viewed as a software implemented supervisory computer the paper develops these concepts in detail outlines the remainder of the supervisor and discusses some of the advantages of this approach cacm march 1972 gaines r s operating systems supervisors multiprogramming time sharing cooperating processes 430 431 432 ca720303 jb january 31 1978 308 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2080
the nucleus of a multiprogramming system this paper describes the philosophy and structure of a multiprogramming system that can be extended with a hierarchy of operating systems to suit diverse requirements of program scheduling and resource allocation the system nucleus simulates an environment in which program execution and inputoutput are handled uniformly as parallel cooperating process es a fundamental set of primitives allows the dynamic creation and control of a hierarchy of processes as well as the communication among them cacm april 1970 hansen p b multiprogramming operating systems parallel processes process concept process communication message buffering process hierarchy process creation process removal 430 431 432 441 ca700404 jb february 13 1978 310 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2629
the unix time sharing system unix is a general purpose multi user interactive operating system for the digital equipment corporation pdp 1140 and 1145 computers it offers a number of features seldom found even in larger operating systems including 1 a hierarchical file system incorporating demountable volumes 2 compatible file device and inter process io 3 the ability to initiate asynchronous processes 4 system command language selectable on a per user basis and 5 over 100 subsystems including a dozen languageshis paper discusses the nature and implementation of the file system and of the user command interface cacm july 1974 ritchie d m thompson k time sharing operating system file system command language pdp 11 430 432 ca740702 jb january 17 1978 140 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0243
n dimensional codes for detecting and correcting multiple errors the paper introduces a new family of codes for detecting and correcting multiple errors in a binary coded message the message itself is arranged conceptually into a multidimensional rectangular array the processes of encoding and error detection are based upon parity evaluations along prescribed dimensions of the array effectiveness of the codes is increased by introducing a system check bit which is essentially a parity check on the other parity bits only three dimensional codes are discussed in this paper with parity evaluations along the horizontal the vertical and one main diagonal however the family of codes is not restricted to three dimensions as evidenced by the discussion by minnick and ashenhurst on a similar multidimensional single bit selection plan used for another purpose 6 a four dimensional code correcting three and detecting four errors has been developed the extension to higher dimensional codes with greater correction power is straightforward cacm december 1961 rubinoff m ca611207 jb march 15 1978 1023 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1135
a general business oriented language based on decision expressions the structure of a digital compute programming language which covers a wide class of business and file processing applications is presented such a structure based on identifying and incorporating into a compiler the aspects common to all processes of such class permits writing extremely compact programs even for comparatively complex applications in terms of tables of control expressions which express only information characteristic of the particular application furthermore local changes of a process eg changes affecting only one of the output files involved can be effected by local modifications in the program eg modification of only one entry of the tables this structure also allows for inexpensive preparation of loading speed compilers which translate the source programs into efficient machine codes the approach adopted here departs from conventional mechanical language design philosophies it stresses the structural analysis of the class of processes to be represented in the languages as opposed to emphasizing formal ie contents independent syntactical definitions it relies exclusively on nonprocedural representation of process as sets tables of relations between data and results there are no control statements such as go to etc instead of using procedure descriptions which are one to one translations of flowcharts here an invariant pattern of procedure is identified as characteristic of the class of all batch file processes this new philosophy has the potential to overcome well known deficiencies of other business oriented languages and fully meets the requirements set by codasyl for such languages including machine independence cacm february 1964 lombardi l a ca640208 jb march 10 1978 408 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2740
a large semaphore based operating system the paper describes the internal structure of a large operating system as a set of cooperating sequential processes the processes synchronize by means of semaphores and extended semaphores queue semaphores the number of parallel processes is carefully justified and the various semaphore constructions are explained the system is proved to be free of deadly embrace deadlock the design principle is an alternative to dijkstras hierarchical structuring of operating systems the project management and the performance are discussed too the operating system is the first large one using the rc 4000 multiprogramming system cacm july 1975 lauesen s cooperating processes operating system semaphores semaphore applications queue semaphores deadlock deadly embrace hierarchical structuring multiprogramming operating system structure asynchronous structuring buffering parallel processes synchronizing primitives reentrant code rc 4000 project management time schedule debugging project planning project scheduling reliability program proving coroutines correctness program maintenance software paging 430 431 432 442 443 524 ca750702 jb january 9 1978 1032 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1750
considerations in the design of a multiple computer system with extended core storage the use of large quantities of addressable but not executable fast random access memory to heighten the multiprogramming performance of a multicomputer system is discussed the general design of the hardware arrangement and the software components and functions of such a system are based on a planned configuration of dual cdc 6600s that share one million words of extended core storage in the generalization of such a design special emphasis is placed on estimating expected gains when compared with the traditional configuration of separate and independent computers without extended core storage an observation is made on the use of conventional slower speed random access storage devices in place of the faster memory cacm may 1968 fuchel k heller s multiple computer systems extended core storage multiprogrammed operating systems multiprocessor operating systems control data corporation 6600 operating system with ecs 430 432 ca680506 jb february 23 1978 927 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0409
cl 1 an environment for a compiler a flexible large scale programming system to facilitate the solution of information processing problems and to provide intercommunication between programs andor programmers has been developed and realized on the ibm 7097090 computer the system is based on a master file concept and has provisions for accepting storing and retrieving both descriptions and instances of large and complex data sets as well as algorithms defined on these data sets both data and algorithms may be expressed in a family of command and descriptive languages the concept of distinct data descriptions and the content and use of such descriptions are discussed in some detail cacm january 1961 cheatham jr t e collins jr g o leonard g f ca610105 jb march 17 1978 126 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1846
on simulating networks of parallel processes in which simultaneous events may occur some of the problems of simulating discrete event systems particularly computer systems on a conventional digital computer are dealt with the systems are assumed to be described as a network of interconnected sequential processes briefly reviewed are the common techniques used to handle such simulations when simultaneous events do not occur can be ignored or can be handled by simple priority rules following this the problem of dealing with simultaneous events in separate processes is introduced an abstraction of this problem is developed which admits solution for a majority of commonly encountered problems the technique will either find a method of simulating the parallel events or report that none can be found in some of the latter cases it is shown to be possible to find a solution by extending the information available to the solution technique but in many cases the technique becomes computationally unfeasible when the additional information is provided cacm september 1969 parnas d l simulation parallel processes simultaneous events picture processing computer system simulation 319 324 424 59 69 ca690910 jb february 15 1978 421 pm 
****************************

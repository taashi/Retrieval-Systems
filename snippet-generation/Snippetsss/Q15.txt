/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2464
the complex method for constrained optimization e4 algorithm a454 cacm august 1973 richardson j a kuester j l optimization constrained optimization boxs algorithm 541 ca730810 jb january 23 1978 1034 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2835
recursion analysis for compiler optimization a relatively simple method for the detection of recursive use of procedures is presented for use in compiler optimization implementation considerations are discussed and a modification of the algorithm is given to further improve optimization this analysis can also be used to determine what possible subset of values could be assumed by variables which can only take on a relatively small discrete set of values the most common are parameters of variables assuming values of label procedure or pascals enumerated type cacm september 1976 walter k g recursion compiler optimization 412 ca760904 jb january 4 1978 936 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1231
peephole optimization redundant instructions may be discarded during the final stage of compilation by using a simple optimizing technique called peephole optimization the method is described and examplesare given cacm july 1965 mckeeman w m ca650704 jb march 6 1978 905 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2611
the complex method for constrained optimization algorithm r454 cacm august 1974 shere k d ca740813 jb january 17 1978 928 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2616
on the conversion of programs to decision tables method and objectives the problems of converting programs to decision tables are investigated objectives of these conversions are mainly program debugging and optimization in practice extensions to the theory of computation and computability are suggested cacm august 1974 cavouras j c decision tables program optimization debugging semantics theory of programming systems analysis 419 442 443 521 529 ca740808 jb january 17 1978 943 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1947
object code optimization methods of analyzing the control flow and data flow of programs during compilation are applied to transforming the program to improve object time efficiency dominance relationships indicating which statements are necessarily executed before others are used to do global common expression elimination and loop identification implementation of these and other optimizations in os360 fortran h are described cacm january 1969 lowry e s medlock c w compilers data flow analysis dominance efficiency fortran graph theory loop structure machine instructions object code optimization redundancy elimination register assignment system360 412 524 532 ca690102 jb february 20 1978 1215 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2133
algorithm for the assignment problem rectangular matrices h algorithm 415 cacm december 1971 bourgeois f lassalle j c operations research optimization theory assignment problem rectangular matrices 539 540 ca711210 jb february 2 1978 938 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2929
an analysis of inline substitution for a structured programming language an optimization technique known as inline substitution is analyzed the optimization consists of replacing a procedure invocation by a modified copy of the procedure body the general problem of using inline substitution to minimize execution time subject to size constrain ts is formulated and an approximate algorithmic solution is proposed the algorithm depends on run time statistics about the program to be optimized preliminary results for the clu structured programming language indicate that in programs with a low degree of recursion over 90 percent of all procedure calls can be eliminated with little increase in the size of compiled code and a small savings in execution time other conclusions based on these results are also presented cacm september 1977 scheifler r w inline substitution open coding open compilation program optimization compilers structured programming languages run time statistics 412 ca770905 jb december 27 1977 123 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2495
adapting optimal code generation for arithmetic expressions to the instruction sets available on present day computers cacm june 1973 stockhausen p f arithmetic expressions code generation compilers object code optimization register assignment trees 412 524 532 ca730605 jb january 23 1978 224 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2344
on the optimization of performance of time sharing systems by simulation a simulation model of a time sharing system with a finite noncontiguous store and an infinite auxiliary store is used to study the variation of system parameters such as store size number of jobs allowed to execute simultaneously job scheduling algorithm etc the effects of these variations on a measure of system performance is used to ascertain which of the parameters controllable by the job scheduling algorithm including the scheduling itself require optimization and which of the parameters not normally controllable by the scheduling algorithm have a marked effect on system performance system performance is based upon the mean cost of delay to all jobs processed it is shown that significant improvements in the measure of system performance can be obtained by using variable time slice techniques and by selecting the optimum round robin cycle time it appears that these features would benefit from optimization whereas other parameters controllable by the scheduling algorithm affect system performance in a predictable manner and would not benefit from optimization features not normally under the control of the scheduling algorithm can also have a marked effect on the measure of performance in particular supervisor overheads the size of the store and the speed of the cpu a comparison is made between the results of the simulation model and two analytical equations for quantum oriented nonpreemptive time sharing systems the comparison is found to be very favorable cacm june 1972 blatny j clark s r rourke t a time sharing simulation studies optimization measure of performance scheduling algorithms 380 430 432 ca720601 jb january 31 1978 919 am 
****************************

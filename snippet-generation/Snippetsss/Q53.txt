/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0569
binomial coefficients algorithm 19 cacm june 1962 steck b ca620616 jb march 17 1978 922 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0514
binomial coefficients algorithm 19 cacm august 1962 george r ca620814 jb march 17 1978 940 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0139
binomial coefficients algorithm 19 cacm october 1960 kenyon r r ca601009 jb march 20 1978 814 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2391
unitary symmetric polynomials z algorithm r391 cacm january 1972 schrack g f symmetric polynomials elementary symmetric polynomials unitary symmetric polynomials polynomial synthesis reverse horner scheme reverse synthetic division binomial coefficients 511 530 55 ca720112 jb february 1 1978 855 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1186
recursive solution of a class of combinatorial problems an example combinatorial problems requiring the selection of n elements from a set of m elements may be solved by a recursion process analogous to that for computing binomial coefficients several specific problems are analyzed the general technique is exposed and an algol program is developed for one of the problems cacm october 1965 lynch w c ca651009 jb march 6 1978 640 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2229
construction of rational and negative powers of a formal series some methods are described for the generation of fractional and negative powers of any formal series such as poisson series or chebyshev series it is shown that with the use of the three elementary operations of addition subtraction and multiplication all rational positive and negative powers of a series can be constructed there are basically two approaches the binomial theorem and the iteration methods both methods are described here and the relationship between them is pointed out some well known classical formulas are obtained as particular cases and it is shown how the convergence properties of these formulas can be improved with very little additional computations finally at the end of the article some numerical experiments are described with chebyshev series and with fourier series cacm january 1971 brucke r a series expansion series inversion root extraction binomial theorem newton iterations chebyshev series poisson series fourier series 311 315 321 50 ca710105 jb february 8 1978 1057 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0679
recent improvements in madcap madcap is a programming language admitting subscripts superscripts and certain forms of displayed formulas the basic implementation of this language was described in a previous paper madcap a scientific compiler for a displayed formula textbook language comm acm 4 jan 61 31 36 this paper discusses recent improvements in the language in three areas complex display logical control and subprogramming in the area of complex display the most prominent improvements are a notation for integration and for the binomial coefficients in the area of logical control the chief new feature is a notation for variably nested looping the discussion of subprogramming is focused on madcaps notation for and use of procedures cacm november 1963 wells m b ca631113 jb march 13 1978 339 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2210
toward automatic program synthesis an elementary outline of the theorem proving approach to automatic program synthesis is given without dwelling on technical details the method is illustrated by the automatic construction of both recursive and iterative programs operating on natural numbers lists and trees in order to construct a program satisfying certain specifications a theorem induced by those specifications is proved and the desired program is extracted from the proof the same technique is applied to transform recursively defined functions into iterative programs frequently with a major gain inefficiency it is emphasized that in order to construct a program with loops or with recursion the principle of mathematical induction must be applied the relation between the version of the induction rule used and the form of the program constructed is explored in some detail cacm march 1971 manna z waldinger r j artificial intelligence answer extraction automatic program synthesis mathematical induction principle problem solving theorem proving 364 523 524 ca710302 jb february 3 1978 448 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2986
operations on sparse relations various computations on relations boolean matrices or directed graphs such as the computation of precedence relations for a context free grammar can be done by a practical algorithm that is asymptotically faster than those in common use for example how to compute operator precedence or wirth weber precedence relations in on2 steps is shown as well as how to compute linear precedence functions in on2 steps is shown as well as how to compute linear precedence functions in on steps where n is the size of a grammer the heart of the algorithms is a general theorem giving sufficient conditions under which an expression whose operands are sparse relations and whose operators are composition transitive closure union and inverse can be computed efficiently cacm march 1977 hunt h b iii szymanski t g ullman j d computational complexity sparse relation boolean matrix directed graph wirth weber precedence relation linear precedence function slr grammar t canonical precedence relation 412 523 525 ca770306 jb december 29 1977 805 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2031
algorithm and bound for the greatest common divisor of n integers a new version of the euclidean algorithm for finding the greatest common divisor of n integers ai and multipliers xi such that gcd x1a1 xnan is presented the number of arithmetic operations and the number of storage locations are linear in n a theorem of lame that gives a bound for the number of iterations of the euclidean algorithm for two integers is extended to the case of n integers an algorithm to construct a minimal set of multipliers is presented a fortran program for the algorithm appears as comm acm algorithm 386 cacm july 1970 bradley g h greatest common divisor euclidean algorithm number theory diophantine equations 315 510 ca700706 jb february 13 1978 845 am 
****************************

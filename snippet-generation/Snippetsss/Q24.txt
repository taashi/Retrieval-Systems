/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1696
an algorithm for identifying the ergodic subchains and transient states of a stochastic matrix an algorithm for identifying the ergodic subchains and transient states of a stochastic matrix is presented applications in markov renewal programming and in the construction of variable length codes are reviewed and an updating procedure for dealing with certain sequences of stochastic matrices is discussed computation times are investigated experimentally and compared with those of another recently propose method cacm september 1968 fox b l landi d m stochastic matrix ergodic chain identification 539 55 ca680905 jb february 22 1978 904 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0268
stochastic evaluation of a static storage allocation cacm october 1961 cohen l j ca611013 jb march 16 1978 1248 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0020
accelerating convergence of iterative processes a technique is discussed which when applied to an iterative procedure for the solution of an equation accelerates the rate of convergence if the iteration converges and induces convergence if the iteration diverges an illustrative example is given cacm june 1958 wegstein j h ca580602 jb march 22 1978 909 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1410
interarrival statistics for time sharing systems the optimization of time shared system performance requires the description of the stochastic processes governing the user inputs and the program activity this paper provides a statistical description of the user input process in the sdc arpa general purpose time sharing system tss the input process is assumed to be stationary and to be defined by the interarrival time distribution the data obtained appear to justify satisfactorily the common assumption that the interarrival times are serially independent the data do not appear to justify except as a very rough approximation the usual assumption off an exponential distribution for interarrival time a much more satisfactory approximation to the data can be obtained with a biphase or triphase hyperexponential distribution cacm july 1966 coffman e g wood r c ca660704 jb march 2 1978 945 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-3043
distributed processes a concurrent programming concept a language concept for concurrent processes without common variables is introduced these processes communicate and synchronize by means of procedure calls and guarded regions this concept is proposed for real time applications controlled by microcomputer networks with distributed storage the paper gives several examples of distributed processes and shows that they include procedures coroutines classes monitors processes semaphores buffers path expressions and inputoutput as special cases cacm november 1978 hansen p concurrent programming distributed processes microprocessor networks nondeterminism guarded regions programming languages process communication and scheduling sorting arrays coroutines classes monitors processes semaphores buffers path expressions inputoutput 38 42 422 432 524 ca781108 dh january 26 1979 1040 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2342
interference between communicating parallel processes various kinds of interference between communicating parallel processes have been examined by dijkstra knuth and others solutions have been given for the mutual exclusion problem and associated subproblems in the form of parallel programs and informal proofs of correctness have been given for these solutions in this paper a system of parallel processes is regarded as a machine which proceeds from one state s ie a collection of pertinent data values and process configurations to a next state s in accordance with a transition rule s s a set of such rules yields sequences of states which dictate the systems behavior the mutual exclusion problem and the associated subproblems are formulated as questions of inclusion between sets of states or of the existence of certain sequences a mechanical proof procedure is shown which will either verify prove the correctness of or discredit prove the incorrectness of an attempted solution with respect to any of the interference properties it is shown how to calculate transition rules from the partial rules by which the individual processes operate the formation of partial rules and the calculation of transition rules are both applicable to hardware processes as well as to software processes and symmetry between processes is not required cacm june 1972 gilbert p chandler w j concurrent programming control cooperating processes formal programs interference mutual exclusion operating systems parallel processes 40 410 430 432 442 524 620 ca720603 jb january 31 1978 844 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0942
fortran subroutines for time series analysis the authors have recently been concerned in a time series study that constituted a fairly typical piece of applied statistical research involving extensive computations on a moderately large quantity of data wehave found that the many different numerical processes that were required could be built up almost completely from a small number of basic operations and a set of fortran subroutines has been written to perform these the main purpose of this note is to describe these subroutines but since the question of general statistical programs is topical 1 we include some general remarks cacm january 1963 healy m j r bogert b p ca630106 jb march 14 1978 255 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2882
a stochastic evaluation model for database organization in data retrieval systems experimental work in the valuation of large scale data retrieval systems has been scarce due to its difficulty and prohibitive cost this paper discusses a simulation model of a data retrieval system which has the effect of significantly reducing the cost of experimentation and enabling research never attempted before the model is designed to estimate the retrieval workload of alternative data retrieval systems these data retrieval systems can be organized under several database organizations including inverted list threaded list and cellular list organizations and hybrid combinations of these systems effectiveness of the methodology is demonstrated by using the model to study the effect of database organizations in data retrieval systems in particular the impact of query complexity is analyzed cacm february 1976 siler k f database architecture database performance and evaluation invented list threaded list cellular list information retrieval database organizations query complexity stochastic model monte carlo simulation 370 371 372 373 374 379 ca760205 jb january 5 1978 920 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2376
synchronization of communicating processes formalization of a well defined synchronization mechanism can be used to prove that concurrently running processes of a system communicate correctly this is demonstrated for a system consisting of many sending processes which deposit messages in a buffer and many receiving processes which remove messages from that buffer the formal description of the synchronization mechanism makes it very easy to prove that the buffer will neither overflow nor underflow that senders and receivers will never operate on the same message frame in the buffer nor will they run into a deadlock cacm march 1972 habermann a n parallel programming multiprogramming program correctness process communication process scheduling 430 432 439 49 ca720305 jb january 31 1978 244 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2740
a large semaphore based operating system the paper describes the internal structure of a large operating system as a set of cooperating sequential processes the processes synchronize by means of semaphores and extended semaphores queue semaphores the number of parallel processes is carefully justified and the various semaphore constructions are explained the system is proved to be free of deadly embrace deadlock the design principle is an alternative to dijkstras hierarchical structuring of operating systems the project management and the performance are discussed too the operating system is the first large one using the rc 4000 multiprogramming system cacm july 1975 lauesen s cooperating processes operating system semaphores semaphore applications queue semaphores deadlock deadly embrace hierarchical structuring multiprogramming operating system structure asynchronous structuring buffering parallel processes synchronizing primitives reentrant code rc 4000 project management time schedule debugging project planning project scheduling reliability program proving coroutines correctness program maintenance software paging 430 431 432 442 443 524 ca750702 jb january 9 1978 1032 am 
****************************

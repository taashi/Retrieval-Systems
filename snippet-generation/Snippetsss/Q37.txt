/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2558
protection in programming languages linguistic mechanisms which can be used to protect one subprogram from anothers malfunctioning are described function producing functions and various type tagging schemes are considered an attempt is made to distinguish between access limitation and authentication cacm january 1973 morris j h jr protection types environments trademarks seals access keys access control authentication secrecy 42 43 ca730103jb january 24 1978 445 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2242
product type two point gauss legendre simpsons integration d1 algorithm a438 cacm december 1972 boland w r numerical integration product type quadrature gaussian quadrature simpsons rule 516 ca721213 jb january 27 1978 908 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2244
product type trapezoidal integration algorithm a436 cacm december 1972 boland w r numerical integration product type quadrature trapezoidal integration 516 ca721211 jb january 27 1978 911 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2243
product type simpsons integration d1 algorithm a437 cacm december 1972 boland w r numerical integration product type quadrature simpsons rule 516 ca721212 jb january 27 1978 910 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2241
product type three point gauss legendre simpsons integration d1 algorithm a439 cacm december 1972 boland w r numerical integration product type quadrature gaussian quadrature simpsons rule 516 ca721214 jb january 27 1978 906 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2265
a model for type checking most current programming languages treat computation over different classes of objects eg numbers strings labels and functions for correct compilation and execution the following question then arises is a program properly constructed so that its operations and operands are compatible the activity of answering this question is usually called type checking this paper attempts to isolate the notion of type checking and presents a partial solution to the type checking problem based on the notions of abstraction and application of functions in particular a program is mapped into an expression within a decidable subset of the lambda calculus which characterizes the type relations within the program and eliminates all other information the determination of the type wise correctness or incorrectness of the program is resolved by reducing its corresponding lambda calculus expression to one of two normal forms the constant correct for a type wise correct program or the constant error an application to type checking in algol 60 is made and the attendant problems faced for any notion of type checking are discussed cacm november 1972 ledgard h f type checking types lambda calculus models for programming languages syntax semantics compiler writing language implementation formal definition 412 422 52 521 523 ca721104 jb january 27 1978 230 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2957
database abstractions aggregation aggregation is in troduced as an abstraction which is important in conceptualizing the real world aggregation transforms a relationship between objects into a higher level object a new data type called aggregation is developed which under certain criteria of well definedness specifies aggregation abstractions relational databases defined as collections of aggregates are structured as a hierarchy on n ary relations to main tain well definedness update operations on such databases must preserve two invariants well defined relations are distinct from relations in third normal form it is shown that these notions are complementary and both are important in database design a top down methodology for database design is described which separates decisions concerning aggregate structure from decisions concerning key identification it is suggested that aggregate types and other types which support real world abstractions without in troducing implementation detail should be incorporated into programming languages cacm june 1977 smith j m smith d c p data abstraction relational database data type aggregation database design data structure knowledge representation data definition language 365 369 379 429 433 434 ca770606 jb december 29 1977 1233 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2651
the treatment of data types in el1 in constructing a general purpose programming language a key issue is providing a sufficient set of data types and associated operations in a manner that permits both natural problem oriented notation and efficient implementation the el1 language contains a number of features specifically designed to simultaneously satisfy both requirements the resulting treatment of data types includes provision for programmer defined data types data types and generic routines programmer control over type conversion and very flexible data type behavior in a context that allows efficient compiled code and compact data representation cacm may 1974 wegbreit b data types modes mode unions type conversion coercion generic functions extensible languages data type definition data description language compilation 412 413 422 ca740502 jb january 17 1978 432 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0457
quantum mechanical integrals over all slater type integrals cacm november 1962 browne j c ca621104 jb march 17 1978 654 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0618
computers the key to total systems control an industrial viewpoint man man machine processes are characterized in five main types and the markets for each type are shown for 1950 and 1960 and estimated for 1970 cacm march 1962 carlson w m ca620314 jb march 20 1978 253 pm 
****************************

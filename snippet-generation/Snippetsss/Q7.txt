/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-3043
distributed processes a concurrent programming concept a language concept for concurrent processes without common variables is introduced these processes communicate and synchronize by means of procedure calls and guarded regions this concept is proposed for real time applications controlled by microcomputer networks with distributed storage the paper gives several examples of distributed processes and shows that they include procedures coroutines classes monitors processes semaphores buffers path expressions and inputoutput as special cases cacm november 1978 hansen p concurrent programming distributed processes microprocessor networks nondeterminism guarded regions programming languages process communication and scheduling sorting arrays coroutines classes monitors processes semaphores buffers path expressions inputoutput 38 42 422 432 524 ca781108 dh january 26 1979 1040 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2912
concurrent reading and writing the problem of sharing data among asynchronous process is considered it is assumed that only one process at a time can modify the data but concurrent reading and writing is permitted two general theorems are proved and some algorithms are presented to illustrate their use these include a solution to the general problem in which a read is repeated if it might have obtained an incorrect result and two techniques for transmitting messages between processes these solutions do not assume any synchronizing mechanism other than data which can be written by one process and read by other processes cacm november 1977 lamport l asynchronous multiprocessing multiprocess synchronization readerswriters problem shared data 432 524 ca771104 jb december 27 1977 747 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2903
improving programs by the introduction of recursion a new technique of program transformation called recursion in troduction is described and applied to two algorithms which solve pattern matching problems by using recursion in troduction algorithms which manipulate a stack are first translated into recursive algorithms in which no stack operations occur these algorithms are then subjected to a second transformation a method of recursion elimination called tabulation to produce programs with a very efficient running time in particular it is shown how the fast linear pattern matching algorithm of knuth morris and pratt can be derived in a few steps from a simple nonlinear stack algorithm cacm november 1977 bird r s program transformation optimization of programs recursion elimination pattern matching algorithms stacks computational induction 40 42 520 524 525 ca771113 jb december 27 1977 629 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-3006
anomalies with variable partition paging algorithms five types of anomalous behavior which may occur in paged virtual memory operating systems a redefined one type of anomaly for example concerns the fact that with certain reference strings and paging algorithms an increase in mean memory allocation may result in an increase in fault rate two paging algorithms are examined in terms of their anomaly potential and reference string examples of various anomalies are presented two paging algorithm properties the inclusion property and the generalized inclusion property are discussed and the anomaly implications of these properties presented cacm march 1978 franklin m graham g gupta r anomaly memory management program behavior stack algorithms virtual memory working set page fault frequency paging algorithms 432 435 46 81 ca780307 jb march 28 1978 101 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-3141
an improved algorithm for decentralized extrema finding in circular configurations of processes this note presents an improvement to lelanns algorithm for finding the largest or smallest of a set of uniquely numbered processes arranged in a circle in which no central controller exists and the number of processes is not known a priori this decentralized algorithm uses a technique of selective message extinction in order to achieve an average number of message passes of order n log n rather than on2 cacm may 1979 chang e roberts r decentralized algorithms distributed systems operating systems 432 435 525 532 ca790502 dh june 5 1979 235 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2902
dynamic memory allocation in computer simulation this paper investigates the performance of 35 dynamic memory allocation algorithms when used to service simulation programs as represented by 18 test cases algorithm performance was measured in terms of processing time memory usage and external memory fragmentation algorithms main taining separate free space lists for each size of memory block used tended to perform quite well compared with other algorithms simple algorithms operating on memory ordered lists without any free list performed surprisingly well algorithms employing power of two block sizes had favorable processing requirements but generally unfavorable memory usage algorithms employing lifo fifo or memory ordered free lists generally performed poorly compared with others cacm november 1977 nielsen n r algorithm performance dynamic memory allocation dynamic memory management dynamic storage allocation garbage collection list processing memory allocation memory management programming techniques simulation simulation memory management simulation techniques space allocation storage allocation 374 449 525 81 ca771114 jb december 27 1977 609 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2111
spelling correction in systems programs several specialized techniques are shown for efficiently incorporating spelling correction algorithms in to compilers and operating systems these include the use of syntax and semantics information the organization of restricted keyword and symbol tables and the consideration of a limited class of spelling errors sample 360 coding for performing spelling correction is presented by using systems which perform spelling correction the number of debugging runs per program has been decreased saving both programmer and machine time cacm february 1970 morgan h l spelling correction error correction debugging compilers operating systems diagnostics error detection misspelling lexical analysis systems programming 442 412 30 379 ca700204 jb february 14 1978 1040 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0270
techniques for storage allocation algorithms cacm october 1961 kelley jr j e ca611011 jb march 16 1978 1250 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0371
remarks on algorithms 2 and 3 algorithm 15 and algorithms 25 and 26 cacm march 1961 wilkinson j h ca610311 jb march 17 1978 1235 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1551
on compiling algorithms for arithmetic expressions this paper deals with algorithms concerning arithmetic expressions used in a fortran iv compiler for a hitac 5020 computer having n accumulators the algorithms generate an object code which minimizes the frequency of storing and recovering the partial results of the arithmetic expressions in cases where there are several accumulators cacm august 1967 nakata i ca670804 jb february 27 1978 435 pm 
****************************

/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2973
sorting on a mesh connected parallel computer two algorithms are presented for sorting n2 elements on an n x n mesh connected processor array that require on routing and comparison steps the best previous algorithm takes time on log n the algorithms of this paper are shown to be optimal in time within small constant factors extensions to higher dimensional arrays are also given cacm april 1977 thompson c d kung h t parallel computer parallel sorting parallel merge routing and comparison steps perfect shuffle processor in terconnection pattern 432 525 531 ca770409 jb december 29 1977 458 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-3075
fast parallel sorting algorithms a parallel bucket sort algorithm is presented that requires time olog n and the use of n processors the algorithm makes use of a technique that requires more space than the product of processors and time a realistic model is used model is used in which no memory contention is permitted a procedure is also presented to sort n numbers in time ok log n using n 1 1k processors for k an arbitrary integer the model of computation for this procedure permits simultaneous fetches from the same memory location cacm august 1978 hirschberg d parallel processing sorting algorithms bucket sort 374 434 525 531 ca780803 dh february 7 1979 1025 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2266
a highly parallel algorithm for approximating all zeros of a polynomial with only real zeros an algorithm is described based on newtons method which simultaneously approximates all zeros of a polynomial with only real zeros the algorithm which is conceptually suitable for parallel computation determines its own starting values so that convergence to the zeros is guaranteed multiple zeros and their multiplicity are readily determined at no point in the method is polynomial deflation used cacm november 1972 patrick m l parallel numerical algorithms real polynomials real zeros newtons method starting values guaranteed convergence 515 ca721103 jb january 27 1978 235 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-3156
computing connected components on parallel computers we present a parallel algorithm which uses n2 processors to find the connected components of an undirected graph with n vertices in time olog2n an olog2n time bound also can be achieved using only nnlog2n processors the algorithm can be used to find the transitive closure of a symmetric boolean matrix we assume that the processors have access to a common memory simultaneous access to the same location is permitted for fetch instructions but not for store instructions cacm august 1979 hirschberg d chandra a sarwate d graph theory parallel processing algorithms transitive closure connected component 525 532 622 ca790802 db january 4 1980 1218 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1601
parallel numerical methods for the solution of equations classical iterative procedures for the numerical solution of equations provide at each stage a single new approximation to the root in question a technique is given for the development of numerical procedures which provide at each stage several approximations to a solution of an equation the s8everal approximations obtained in any iteration are computationally independent making the methods of interest in a parallel processing environment convergence is insured by extracting the best information at each iteration several families of numerical procedures which use the technique of the procedures in a parallel processing environment are developed and measurements of these statistics are reported these measurements are interpreted in a parallel processing environment in such an environment the procedures obtained are superior to standard algorithms cacm may 1967 shedler g s ca670505 jb february 28 1978 1044 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2557
on the time required for a sequence of matrix products this paper discusses the multiplication of conformable sequences of row vectors column vectors and square matrices the minimum time required to evaluate such products on ordinary serial computers as well as parallel computers is discussed algorithms are presented which properly parse such matrix sequences subject to the constraints of the machine organization cacm january 1973 muraoka y kuck d j matrix expressions matrix multiplication operation minimization parallel machine time minimization 422 514 ca730104 jb january 24 1978 441 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0950
parallel methods for integrating ordinary differential equations this paper is dedicated to the proposition that in order to take full advantage for real time computations of highly parallel computers as can be expected to be available in the near future much of numerical analysis will have to be recast in a more parallel form by this is meant that serial algorithms ought to be replaced by algorithm which consist of several subtasks which can be computed without knowledge of the results of the other subtasks as an example a method is proposed for parallelizing the numerical integration of an ordinary differential equation which process by all standard methods is entirely serial cacm december 1964 nievergelt j ca641221 jb march 9 1978 309 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2289
cellular arrays for the solution of graph problems a cellular array is a two dimensional checkerboard type interconnection of identical modules or cells where each cell contains a few bits of memory and a small amount of combinational logic and communicates mainly with its immediate neighbors in the array the chief computational advantage offered by cellular arrays is the improvement in speed achieved by virtue of the possibilities for parallel processing in this paper it is shown that cellular arrays are inherently well suited for the solution of many graph problems for example the adjacency matrix of a graph is easily mapped onto an array each matrix element is stored in one cell of the array and typical row and column operations are readily implemented by simple cell logic a major challenge in the effective use of cellular arrays for the solution of graph problems is the determination of algorithms that exploit the possibilities for parallelism especially for problems whose solutions appear to be inherently serial in particular several parallelized algorithms are presented for the solution of certain spanning tree distance and path problems with direct applications to wire routing pert chart analysis and the analysis of many types of networks these algorithms exhibit a computation time that in many cases grows at a rate not exceeding log2 n where n is the number of nodes in the graph straightforward cellular implementations of the well known serial algorithms for these problems require about n steps and noncellular implementations require from n2 to n3 steps cacm september 1972 levitt k n kautz w h graph theory cellular logic in memory arrays parallel processing special purpose computers algorithms for distance and spanning tree problems 532 622 65 ca720901 jb january 30 1978 916 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2896
an exercise in proving parallel programs correct a parallel program dijkstras on the fly garbage collector is proved correct using a proof method developed by owicki the fine degree of in terleaving in this program makes it especially difficult to understand and complicates the proof greatly difficulties with proving such parallel programs correct are discussed cacm december 1977 gries d garbage collection multiprocessing program correctness for multiprocessing tasks 432 434 435 439 524 ca771204 jb february 1 1980 337 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1468
syntax directed interpretation of classes of pictures a descriptive scheme for classes of pictures based on labeling techniques using parallel processing algorithms was proposed by the author some years ago since then much work has been done in applying this to bubble chamber pictures the parallel processing simulator originally written for an ibm 7094 system has now been rewritten for a cdc 3600 system this paper descriptive models by considering their specific application to bubble chamber pictures how the description generated in this phase can be embedded in a larger conversation program is explained by means of a certain specific example that has been worked out a partial generative grammar for handwritten english letters is given as are also a few computer generated outputs using this grammar and the parallel processing simulator mentioned earlier cacm march 1966 narasimhan r ca660304 jb march 3 1978 156 pm 
****************************

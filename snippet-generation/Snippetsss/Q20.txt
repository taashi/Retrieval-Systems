/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2695
tridiagonalization by permutations tridiagonalizing a matrix by similarity transformations is an important computational tool in numerical linear algebra consider the class of sparse matrices which can be tridiagonalized using only row and corresponding column permutations the advantages of using such a transformation include the absence of round off errors and improved computation time when compared with standard transformations a graph theoretic algorithm which examines an arbitrary n x n matrix and determines whether or not it can be permuted into tridiagonal form is given the algorithm requires no arithmetic while the number of comparisons the number of assignments and the number of increments are linear in n this compares very favorably with standard transformation methods if the matrix is permutable into tridiagonal form the algorithm gives the explicit tridiagonal form otherwise early rejection will occur cacm january 1974 gibbs n e poole w g jr tridiagonal matrix permutation algorithm eigenvalues graph bandwidth sparse matrix 514 532 ca740104 jb january 18 1978 231 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2986
operations on sparse relations various computations on relations boolean matrices or directed graphs such as the computation of precedence relations for a context free grammar can be done by a practical algorithm that is asymptotically faster than those in common use for example how to compute operator precedence or wirth weber precedence relations in on2 steps is shown as well as how to compute linear precedence functions in on2 steps is shown as well as how to compute linear precedence functions in on steps where n is the size of a grammer the heart of the algorithms is a general theorem giving sufficient conditions under which an expression whose operands are sparse relations and whose operators are composition transitive closure union and inverse can be computed efficiently cacm march 1977 hunt h b iii szymanski t g ullman j d computational complexity sparse relation boolean matrix directed graph wirth weber precedence relation linear precedence function slr grammar t canonical precedence relation 412 523 525 ca770306 jb december 29 1977 805 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2769
a modification of warshalls algorithm for the transitive closure of binary relations an algorithm is given for computing the transitive closure of a binary relation that is represented by a boolean matrix the algorithm is similar to warshalls although it executes faster for sparse matrices on most computers particularly in a paging environment cacm april 1975 warren h s jr warshalls algorithm transitive closure reachability matrix directed graph digraph boolean matrix binary relation 530 532 ca750408 jb january 9 1978 349 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1563
a method for finding hamilton paths and knights tours the use of warnsdorffs rule for finding a knights tour is generalized and applied to the problem of finding a hamilton path in a graph a graph theoretic justification for the method is given cacm july 1967 pohl i ca670710 jb february 28 1978 828 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2780
on computing certain elements of the inverse of a sparse matrix a recursive algorithm for computing the inverse of a matrix from the lu factors based on relationships in takahashi et al is examined the formulas for the algorithm are given the dependency relationships are derived the computational costs are developed and some general comments on application and stability are made cacm march 1975 erisman e m tinney w f sparse matrices triangular factorization elements of inverse tridiagonal matrix sensitivities 324 514 ca750308 jb january 9 1978 434 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2630
on computing sets of shortest paths in a graph two algorithms are presented that construct the k shortest paths between every pair of vertices in a directed graph these algorithms generalize the floyd algorithm and the dantzig algorithm for finding the shortest path between every pair of vertices in a directed graph cacm june 1974 minieka e graph network shortest path algorithm 532 ca740616 jb january 17 1978 155 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2490
efficient algorithms for graph manipulation h algorithm a447 efficient algorithms are presented for partitioning a graph into connected components biconnected components and simple paths the algorithm for partitioning of a graph into simple paths is iterative and each iteration produces a new path between two vertices already on paths the start vertex can be specified dynamically if v is the number of vertices and e is the number of edges each algorithm requires time and space proportional to max v e when executed on a random access computer cacm june 1973 hopcroft j tarjan r graphs analysis of algorithms graph manipulation 532 ca730610 jb january 23 1978 155 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2524
some approaches to best match file searching the problem of searching the set of keys in a file to find a key which is closest to a given query key is discussed after closest in terms of a metric on the the key space is suitably defined three file structures are presented together with their corresponding search algorithms which are intended to reduce the number of comparisons required to achieve the desired result these methods are derived using certain inequalities satisfied by metrics and by graph theoretic concepts some empirical results are presented which compare the efficiency of the methods cacm april 1973 burkhard w a keller r m matching file structuring file searching heuristics best match 373 379 49 ca730404 jb january 24 1978 954 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2368
an implemented graph algorithm for winning shannon switching games in this tutorial paper a computer program which wins shannon switching games is described since these games are played on graphs the program is a good example of the implementation of graph algorithms the two players in a shannon switching game connect and cut have nonsimilar goals either connect cut or the player moving first is guaranteed the existence of a winning strategy the simple strategy explained in this paper is valid in all three cases in fact the major routines never need to know whether the computer is connect or cut cacm april 1972 chase s m graph algorithms graph processing shannon switching games game playing graph theory positional games demonstration programs game theory spinning trees 369 532 ca720405 jb january 31 1978 134 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2506
a sparse matrix package algorithm r408 cacm may 1973 sale r h j matrix sparse matrix matrix manipulation fortran standards 514 ca730514 jb january 23 1978 430 pm 
****************************

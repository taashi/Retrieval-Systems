/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2973
sorting on a mesh connected parallel computer two algorithms are presented for sorting n2 elements on an n x n mesh connected processor array that require on routing and comparison steps the best previous algorithm takes time on log n the algorithms of this paper are shown to be optimal in time within small constant factors extensions to higher dimensional arrays are also given cacm april 1977 thompson c d kung h t parallel computer parallel sorting parallel merge routing and comparison steps perfect shuffle processor in terconnection pattern 432 525 531 ca770409 jb december 29 1977 458 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-3075
fast parallel sorting algorithms a parallel bucket sort algorithm is presented that requires time olog n and the use of n processors the algorithm makes use of a technique that requires more space than the product of processors and time a realistic model is used model is used in which no memory contention is permitted a procedure is also presented to sort n numbers in time ok log n using n 1 1k processors for k an arbitrary integer the model of computation for this procedure permits simultaneous fetches from the same memory location cacm august 1978 hirschberg d parallel processing sorting algorithms bucket sort 374 434 525 531 ca780803 dh february 7 1979 1025 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2266
a highly parallel algorithm for approximating all zeros of a polynomial with only real zeros an algorithm is described based on newtons method which simultaneously approximates all zeros of a polynomial with only real zeros the algorithm which is conceptually suitable for parallel computation determines its own starting values so that convergence to the zeros is guaranteed multiple zeros and their multiplicity are readily determined at no point in the method is polynomial deflation used cacm november 1972 patrick m l parallel numerical algorithms real polynomials real zeros newtons method starting values guaranteed convergence 515 ca721103 jb january 27 1978 235 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-3156
computing connected components on parallel computers we present a parallel algorithm which uses n2 processors to find the connected components of an undirected graph with n vertices in time olog2n an olog2n time bound also can be achieved using only nnlog2n processors the algorithm can be used to find the transitive closure of a symmetric boolean matrix we assume that the processors have access to a common memory simultaneous access to the same location is permitted for fetch instructions but not for store instructions cacm august 1979 hirschberg d chandra a sarwate d graph theory parallel processing algorithms transitive closure connected component 525 532 622 ca790802 db january 4 1980 1218 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1601
parallel numerical methods for the solution of equations classical iterative procedures for the numerical solution of equations provide at each stage a single new approximation to the root in question a technique is given for the development of numerical procedures which provide at each stage several approximations to a solution of an equation the s8everal approximations obtained in any iteration are computationally independent making the methods of interest in a parallel processing environment convergence is insured by extracting the best information at each iteration several families of numerical procedures which use the technique of the procedures in a parallel processing environment are developed and measurements of these statistics are reported these measurements are interpreted in a parallel processing environment in such an environment the procedures obtained are superior to standard algorithms cacm may 1967 shedler g s ca670505 jb february 28 1978 1044 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2557
on the time required for a sequence of matrix products this paper discusses the multiplication of conformable sequences of row vectors column vectors and square matrices the minimum time required to evaluate such products on ordinary serial computers as well as parallel computers is discussed algorithms are presented which properly parse such matrix sequences subject to the constraints of the machine organization cacm january 1973 muraoka y kuck d j matrix expressions matrix multiplication operation minimization parallel machine time minimization 422 514 ca730104 jb january 24 1978 441 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0950
parallel methods for integrating ordinary differential equations this paper is dedicated to the proposition that in order to take full advantage for real time computations of highly parallel computers as can be expected to be available in the near future much of numerical analysis will have to be recast in a more parallel form by this is meant that serial algorithms ought to be replaced by algorithm which consist of several subtasks which can be computed without knowledge of the results of the other subtasks as an example a method is proposed for parallelizing the numerical integration of an ordinary differential equation which process by all standard methods is entirely serial cacm december 1964 nievergelt j ca641221 jb march 9 1978 309 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1468
syntax directed interpretation of classes of pictures a descriptive scheme for classes of pictures based on labeling techniques using parallel processing algorithms was proposed by the author some years ago since then much work has been done in applying this to bubble chamber pictures the parallel processing simulator originally written for an ibm 7094 system has now been rewritten for a cdc 3600 system this paper descriptive models by considering their specific application to bubble chamber pictures how the description generated in this phase can be embedded in a larger conversation program is explained by means of a certain specific example that has been worked out a partial generative grammar for handwritten english letters is given as are also a few computer generated outputs using this grammar and the parallel processing simulator mentioned earlier cacm march 1966 narasimhan r ca660304 jb march 3 1978 156 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2714
merging with parallel processors consider two linearly ordered sets a b am bn mn and p pm parallel processors working synchronously the paper presents an algorithm for merging a and b with the p parallel processors which requires at most 2log2 2m13mp mplog2 nm steps if n 2bm b an integer the algorithm requires at most 2log2 m1 mp2b steps in the case where m and n are of the same order of magnitude ie nkm with k being a constant the algorithm requires 2log2 m1 mp3k steps these performances compare very favorably with the previous best parallel merging algorithm batchers algorithm which requires np mn2plog2 m steps in the general case and kmp k12mplog2 m in the special case where nkm cacm october 1975 gavril f parallel processing parallel merging parallel binary insertion 531 ca751005 jb january 6 1978 1050 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2838
analysis of an algorithm for real time garbage collection a real time garbage collection system avoids suspending the operations of a list processor for the long times that garbage collection normally requires by performing garbage collection on a second processor in parallel with list processing operations or on a single processor time shared with them algorithms for recovering discarded list structures in this manner are presented and analyzed to determine sufficient conditions under which the list processor never needs to wait on the collector these techniques are shown to require at most twice as much processing power as regular garbage collectors if they are used efficiently the average behavior of the program is shown to be very nearly equal to the worst case performance so that the sufficient conditions are also suitable for measuring the typical behavior of the algorithm cacm september 1976 wadler p l garbage collection storage reclamation list processing lisp time sharing multiprocessing parallel processing real time data structures analysis of algorithms 369 389 419 429 432 434 49 525 ca760901 jb january 4 1978 957 am 
****************************

/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1988
a formalism for translator interactions a formalism is presented for describing the actions of processors for programming languages compilers interpreters assemblers and their interactions in complex systems such as compiler compilers or extendible languages the formalism here might be used to define and answer such a question as can one do bootstrapping using a meta compiler whose metaphase is interpretive in addition an algorithm is presented for deciding whether or not a given system can be produced from a given set of component processors cacm october 1970 earley j translator compiler interpreter bootstrapping language processor compiler compiler 41 529 ca701002 jb february 10 1978 936 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2112
translation equations input limited transduction expressions or translation equations are used to describe the syntax and left context sensitive semantics for context free languages a formal procedure is given for deriving from a set of translation equations the specifications for a pushdown translator the translator consists of mealy form finite state automata interacting by means of a pushdown stack within the framework described string recognition and parsing may be treated as special cases of the translation problem cacm february 1970 vere s automata turing machines regular expression transduction expression context free languages translation recognizers parsing meta compilers pushdown transducer syntax directed compilers finite state automata 410 412 420 522 ca700203 jb february 14 1978 1049 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0265
low level language subroutines for use within fortran this paper describes some subroutines coded in symbolic languages and for use within fortran coded programs to deal with special arithmetic eg multi precision arithmetic symbol manipulation bit manipulation and expanded character set input output and visual display cacm november 1961 barnett m p ca611103 jb march 15 1978 1059 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1304
a rapid turnaround multi programming system in this paper basic features system characteristics and the control algorithm for a multi programming system with rapid turnaround time are described cacm march 1965 irons e t ca650303 jb march 7 1978 619 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2061
an algorithm for the construction of bounded context parsers an algorithm is described which accepts an arbitrary context free grammar and constructs a bounded context parser for it whenever such a parser exists in the first part of the paper the definition of a context free grammar and the working of a bounded context parser are recalled the notion of reduction class for a context free grammar is then introduced and its connection with the structure of a bounded context parser is indicated next pushdown automata which generate the different reduction classes of a context free grammar are defined finally the algorithm is described it essentially carries out an exhaustive study of all possible runs of the pushdown automata generating the reduction classes in the second part the utility of the algorithm is discuss ed in the light of the experience gained from its use in compiler design the algorithm is claimed to be particularly useful in the simultaneous design of a language and a compiler for it cacm may 1970 loeckx j bounded context parsing bounded context syntactic analysis parser construction syntactical analyzer construction generators compiler compilers compiler writing systems translator writing systems metacompilers context free grammars formal languages pushdown automata 412 522 523 ca700505 jb february 13 1978 158 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2579
register allocation via usage counts this paper introduces the notion of usage counts shows how usage counts can be developed by algorithms that eliminate redundant computations and describes how usage counts can provide the basis for register allocation the paper compares register allocation based on usage counts to other commonly used register allocation techniques and presents evidence which shows that the usage count technique is significantly better than these other techniques cacm november 1974 freiburghouse r a optimization redundant computations common subexpressions register allocation compilers programming languages virtual memory demand paging 412 42 439 ca741105 jb january 16 1978 1024 am 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2411
tree structured programs cacm november 1973 wegner e control structures flowcharts goto statements inductive assertion least fix points optimization in compilers program documentation program flow graphs programming language design proof of programs semantics of programming languages structured programming 412 422 524 ca731115 jb january 19 1978 419 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-0062
multi dimensional least squares polynomial curve fitting cacm september 1959 lesh f h ca590907 jb march 22 1978 444 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-1496
a formal semantics for computer languages and its application in a compiler compiler a semantic meta language has been developed for representing the meanings of statements in a large class of computer languages this meta language has been the basis for construction of an efficient functioning compiler compiler an informal discussion of the meta language based on the example of a complete translator for a small language is presented cacm january 1966 feldman j a ca660101 jb march 3 1978 431 pm 
****************************
/Users/rohitchawla/PycharmProjects/tryingtodosomecrap/Corpus/CACM-2666
on lions counter example for gotliebs method for the construction of school timetables the timetable problem is an essentially discrete problem although the discrete problem may have no feasible solution there may exist a solution to the equivalent continuous problem an example is given for which the nondiscrete solution can be interpreted as a set of timetables differing from week to week which together satisfy the long term requirements of the timetable problem cacm april 1974 smith g sefton i m combinatorial multi index problem necessary conditions schedule school timetable timetable 351 539 ca740404 jb january 18 1978 1002 am 
****************************
